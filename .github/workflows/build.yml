name: Continuous Build

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: arm64
            platform: macOS-arm64
          - goos: linux
            goarch: amd64
            platform: amazon-linux-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # Adjust to your Go version

      - name: Get dependencies
        run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Create output directory
          mkdir -p dist
          
          # Build binary
          go build -o dist/datamatrix-${{ matrix.platform }} .
          
          # Create archive with binary and README
          if [ "${{ matrix.goos }}" == "windows" ]; then
            zip -j dist/datamatrix-${{ matrix.platform }}.zip dist/datamatrix-${{ matrix.platform }} README.md
          else
            tar -czf dist/datamatrix-${{ matrix.platform }}.tar.gz -C dist datamatrix-${{ matrix.platform }} -C .. README.md
          fi

      # Upload the binary and archive as artifacts
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: datamatrix-${{ matrix.platform }}-binary
          path: dist/datamatrix-${{ matrix.platform }}
          retention-days: 1
          
      - name: Upload archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: datamatrix-${{ matrix.platform }}-archive
          path: dist/datamatrix-${{ matrix.platform }}.*
          retention-days: 1
