name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: arm64
            platform: macOS-arm64
          - goos: linux
            goarch: amd64
            platform: amazon-linux-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # Adjust to your Go version

      - name: Install DuckDB dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
          
          # Install DuckDB library
          wget https://github.com/duckdb/duckdb/archive/refs/tags/v0.10.1.tar.gz
          tar -xzf v0.10.1.tar.gz
          cd duckdb-0.10.1
          make
          sudo make install
          cd ..
          
      - name: Get Go dependencies
        run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          CGO_CFLAGS: "-I/usr/local/include"
          CGO_LDFLAGS: "-L/usr/local/lib -lduckdb"
        run: |
          # Create output directory
          mkdir -p dist
          
          # Build binary
          go build -o dist/datamatrix-${{ matrix.platform }} .
          
          # Create archive with binary and README
          if [ "${{ matrix.goos }}" == "windows" ]; then
            zip -j dist/datamatrix-${{ matrix.platform }}.zip dist/datamatrix-${{ matrix.platform }} README.md
          else
            tar -czf dist/datamatrix-${{ matrix.platform }}.tar.gz -C dist datamatrix-${{ matrix.platform }} -C .. README.md
          fi

      # Upload the binary and archive as artifacts
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: datamatrix-${{ matrix.platform }}-binary
          path: dist/datamatrix-${{ matrix.platform }}
          retention-days: 1
          
      - name: Upload archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: datamatrix-${{ matrix.platform }}-archive
          path: dist/datamatrix-${{ matrix.platform }}.*
          retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
