basePath: /
definitions:
  main.BulkQueryRequest:
    properties:
      columns:
        description: |-
          Optional list of columns to return. If empty or omitted, all columns will be returned
          To select all columns, you can either: 1) omit this field, 2) provide an empty array, or 3) use ["*"]
        example:
        - '["ID_BB_GLOBAL"'
        - '"Company"'
        - '"Revenue"]'
        items:
          type: string
        type: array
      ids:
        description: List of ID_BB_GLOBAL identifiers to retrieve
        example:
        - '["BBG000B9XRY4"'
        - '"BBG000BVPV84"]'
        items:
          type: string
        type: array
    type: object
  main.QueryRequest:
    properties:
      columns:
        description: |-
          Optional list of columns to return. If empty or omitted, all columns will be returned (equivalent to SELECT *)
          To select all columns, you can either: 1) omit this field, 2) provide an empty array, or 3) use ["*"]
          Column names are case-insensitive, so you can use "revenue", "REVENUE", or "Revenue" interchangeably
        example:
        - '["ID_BB_GLOBAL"'
        - '"Company"'
        - '"Revenue"]'
        items:
          type: string
        type: array
      limit:
        description: Optional limit for the number of results to return
        example: 10
        type: integer
      offset:
        description: Optional offset for pagination
        example: 0
        type: integer
      where:
        description: Optional SQL WHERE clause to filter results (e.g., "Revenue >
          200 AND Industry = 'Technology'")
        example: Revenue > 200
        type: string
    type: object
  main.QueryResponse:
    properties:
      count:
        description: Number of results returned
        type: integer
      data:
        description: The query results
        items:
          additionalProperties: true
          type: object
        type: array
      total:
        description: Total number of records in the database
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: A Go service that loads CSV files into a JSON-based file store and
    provides an HTTP API for querying the data using a minimal SQL dialect.
  title: DataMatrix API
  version: "1.0"
paths:
  /api/asset/{id}:
    get:
      description: Returns the full JSON object for a specific asset
      parameters:
      - description: ID_BB_GLOBAL of the asset
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Asset not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get asset by ID_BB_GLOBAL
      tags:
      - asset
  /api/asset/{id}/columns:
    get:
      description: Returns the columns and their metadata for a specific asset
      parameters:
      - description: ID_BB_GLOBAL of the asset
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              additionalProperties:
                type: string
              type: object
            type: object
        "404":
          description: Asset not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get asset columns
      tags:
      - asset
  /api/asset/{id}/select:
    get:
      description: Returns only the specified columns from an asset
      parameters:
      - description: ID_BB_GLOBAL of the asset
        in: path
        name: id
        required: true
        type: string
      - description: Comma-separated list of column names to return
        in: query
        name: columns
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Asset not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get specific columns from an asset
      tags:
      - asset
  /api/bulk-query:
    post:
      consumes:
      - application/json
      description: Retrieve multiple assets by their ID_BB_GLOBAL identifiers with
        optional column filtering
      parameters:
      - description: Bulk query parameters
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/main.BulkQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Query error
          schema:
            type: string
      summary: Bulk query assets by ID_BB_GLOBAL
      tags:
      - query
  /api/columns:
    get:
      description: Returns the list of all columns available in the data_matrix table
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all available columns
      tags:
      - columns
  /api/index:
    get:
      description: Returns information about the asset index including effective dates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get index information
      tags:
      - index
  /api/progress:
    get:
      description: Returns the current progress status of file processing, row enumeration,
        and idle status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get progress information
      tags:
      - progress
  /api/query:
    post:
      consumes:
      - application/json
      description: |-
        Execute a SQL query against the data_matrix table with optional filtering and pagination
        To select all columns (equivalent to SELECT * FROM data_matrix), you can either:
        1) Omit the columns field entirely
        2) Set columns to an empty array
        3) Explicitly use ["*"] as the columns value
        All three approaches will return all columns for the matching rows.
        Column names are case-insensitive, so you can use "revenue", "REVENUE", or "Revenue" interchangeably.
      parameters:
      - description: Query parameters
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/main.QueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.QueryResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Query error
          schema:
            type: string
      summary: Query the data_matrix table
      tags:
      - query
swagger: "2.0"
